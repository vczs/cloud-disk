// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"cloud-disk/disk/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/emain/code",
				Handler: EmailCodeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/register",
				Handler: UserRegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: UserLoginHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Auth},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/user/info",
					Handler: UserInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/refresh/token",
					Handler: RefreshTokenHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/file/list",
					Handler: FileListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/file/rename",
					Handler: FileRenameHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/folder/create",
					Handler: FolderCreateHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/file/delete",
					Handler: FileDeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/file/move",
					Handler: FileMoveHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Auth},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/file/share",
					Handler: FileShareHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/share/info",
					Handler: ShareInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/share/save",
					Handler: ShareSaveHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Auth},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/file/upload",
					Handler: FileUploadHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/init/part",
					Handler: InitPartHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/upload/part",
					Handler: UploadPartHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/complete/part",
					Handler: CompletePartHandler(serverCtx),
				},
			}...,
		),
	)
}
